module:                                              # mandatory. ilit uses this module name and framework name to decide where to save snapshot if tuning.snapshot field is empty.
  name: resnet50v1.5

framework:                                           # mandatory. supported values are tensorflow, pytorch, or mxnet; allow new framework backend extension.
  name: pytorch 

device: cpu                                          # optional. default value is cpu. other value is gpu.

pruning:                                             # mandotory only for pruning.
  magnitude_pruning:
    prune1:
      weights: ['layer1.0.conv1.weight',  'layer1.0.conv2.weight']
      target_sparsity: 0.3
      epoch: [1, 5, 2]
    prune2:
      weights: ['layer1.0.conv3.weight', 'layer1.0.conv4.weight']
      sparsity: 0.2
  abc_pruning:
    prune1:
      weights: ['layer1.0.conv5.weight',  'layer1.0.conv6.weight']
      sparsity: 0.5
      epoch: 0
    prune2:
      weights: ['layer1.0.conv7.weight',  'layer1.0.conv8.weight']
      sparsity: 0.2
      epoch: 1
  start_epoch: 0
  end_epoch: 20
  frequency: 2
  init_sparsity: 0
  target_sparsity: 0.5

evaluation:                                          # optional. used to config evaluation process. 
  accuracy:                                          # optional. used to evaluate accuracy of passing model.
    metric:                                          # optional. required if user doesn't provide eval_func in ilit.Pruning.
      topk: 1                                        # built-in metrics are topk, map, f1, allow user to register new metric.
    configs:                                         # optional. if not specified, use all cores in 1 socket.
      cores_per_instance: 28
      num_of_instance: 1
    dataloader:                                      # optional. if not specified, user need construct a q_dataloader in code for ilit.Pruning.
      batch_size: 256
      dataset:
        ImageFolder:
          root: /path/to/imagenet/train
      transform:
        RandomResizedCrop:
          size: 224
        RandomHorizontalFlip:
        ToTensor:
        Normalize:
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
    postprocess:                                     # optional. required if output of model could not directly feed into metric evaluator.
      transform:
        Reshape:
          shape: [-1, 1001]
  performance:                                       # optional. used to benchmark performance of passing model.
    warmup: 10
    iteration: 100
    configs:
      cores_per_instance: 4
      num_of_instance: 7
    dataloader:
      dataset:
        dummy:
          shape: [[128, 3, 224, 224], [128, 1, 1, 1]]

tuning:
  accuracy_criterion:
    relative:  0.01                                  # optional. default value is relative, other value is absolute. this example allows relative accuracy loss: 1%.
  objective: performance                             # optional. objective with accuracy constraint guaranteed. default value is performance. other values are modelsize and footprint.

  exit_policy:
    timeout: 0                                       # optional. tuning timeout (seconds). default value is 0 which means early stop. combine with max_trials field to decide when to exit.
    max_trials: 100                                  # optional. max tune times. default value is 100. combine with timeout field to decide when to exit.

  random_seed: 9527                                  # optional. random seed for deterministic tuning.
  tensorboard: True                                  # optional. dump tensor distribution in evaluation phase for debug purpose. default value is False.

  snapshot:
    path: /path/to/saving/directory                  # optional. if not specified, snapshot will be saved under ~/.ilit/$framework_name/$module_name directory.
  resume:
    path: /path/to/a/specified/snapshot/file         # optional. if specified, resume from history.

  deployment:
    output_yaml: /path/to/deploy/yaml/file           # optional. yaml generated during tuning for final deployment.
