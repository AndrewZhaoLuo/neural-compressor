framework: pytorch                                   # built-in values are tensorflow, mxnet and pytorch, allow user register new framework backend

device: cpu

calibration:
  - batchsize: 1, 2, 4                               # TODO: discuss whether it's needed
    iterations: 10, 50
    algo:                                            # default setting of PTQ, allow user config
      - weight:  kl
      - activation: minmax

quantization:                                        # default setting of PTQ, allow user config
  - approach: post_training_static_quant             # other possible values are: post_training_dynamic_quant / quant_aware_training
  - weight: 
      - granularity: per_channel
        mode: asym
        data_type: int8
  - activation:
      - granularity: per_tensor
        mode: asym
        data_type: int8

tuning:
  - strategy: basic                                  # default setting, allow user config. values are basic, random, bayesian, mse
    metric:                                          # only needed if user doesn't provide test_func
      - topk: 1                                      # built-in metrics are topk, map, f1, allow user to register new metric
    accuracy_criterion:
      - relative:  0.01                               # allowed accuracy loss: 1%
      - absolute:  0.01                              # allowed accuracy loss: 1%
    objective: xxx# objective function with accuracy driven, possible values are performance, modelsize, footprint
    timeout: 3                                       # tuning timeout (hour), 0 means early stop
    random_seed: 9527                                # random seed for deterministic running

snapshot:
  - path: /path/to/snapshot
