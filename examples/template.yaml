framework:                                           # user specified. the built-in values are tensorflow, mxnet and pytorch, allow user register new framework backend.
  - name: tensorflow
    inputs: input                                    # optional. inputs and outputs fields are only available for tensorflow.
    outputs: MobilenetV1/Predictions/Reshape_1

device: cpu                                          # optional. default value is cpu. other value is gpu.

calibration:                                         # optional. calibration tuning constraints on model-wise for advance user to reduce tuning space.
  - iterations: 10, 50                               # optional. if not specified, 1 iteration will be used to do calibration on calibration dataset.
    algorithm:                                       # optional. if not specified, framework built-in calibration algorithms will be used.
      - weight:  kl
        activation: minmax

quantization:                                        # optional. tuning constraints on model-wise for advance user to reduce tuning space.
  - approach: post_training_static_quant             # optional. default value is post_training_dynamic_quant.
    weight:
      - granularity: per_channel
        scheme: asym
        dtype: int8
    activation:
      - granularity: per_tensor
        scheme: asym
        dtype: int8

tuning:
  - strategy: basic                                  # optional. default value is basic. other values are random, exhaustive, bayesian, mse.
    metric:                                          # optional. needed if user doesn't provide eval_func in ilit.tune().
      - topk: 1                                      # built-in metrics are topk, map, f1, allow user to register new metric.
    accuracy_criterion:
      - relative:  0.01                              # optional. default value is relative, other value is absolute. this example allows relative accuracy loss: 1%.
    objective: performance                           # optional. default value is performance. other values are modelsize and footprint. it's objective with accuracy driven.
    timeout: 0                                       # optional. tuning timeout (seconds), default value is 0 which means early stop.
    random_seed: 9527                                # optional. random seed for deterministic tuning.
    ops: {                                           # optional. tuning constraints on op-wise for advance user to reduce tuning space. 
           'conv1': {
             'activation':  {'dtype': ['uint8', 'fp32'], 'algorithm': ['minmax', 'kl'], 'scheme':['sym']},
             'weight': {'dtype': ['int8', 'fp32'], 'algorithm': ['kl']}
           },
           'pool1': {
             'activation': {'dtype': ['int8'], 'scheme': ['sym'], 'granularity': ['per_tensor'], 'algorithm': ['minmax', 'kl']},
           },
           'conv2': {
             'activation':  {'dtype': ['fp32']},
             'weight': {'dtype': ['fp32']}
           }
         }

snapeshot:                                           # optional. if not specified, snapshot will be saved under working directory.
  - path: /tmp/snapshot
